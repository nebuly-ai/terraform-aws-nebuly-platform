locals {
  analytics_rds_instance_name = "${var.resource_prefix}platformanalytics"
  auth_rds_instance_name      = "${var.resource_prefix}platformauth"
}

module "rds_postgres_analytics" {
  source  = "terraform-aws-modules/rds/aws"
  version = "~>6.5"

  identifier = local.analytics_rds_instance_name

  engine               = "postgres"
  engine_version       = "15"
  family               = "postgres15"
  major_engine_version = "15"
  instance_class       = "db.t4g.micro"

  allocated_storage = 20
  storage_type      = "gp2"
  #iops                  = 260
  max_allocated_storage = 100

  # NOTE: Do NOT use 'user' as the value for 'username' as it throws:
  # "Error creating DB Instance: InvalidParameterValue: MasterUsername
  # user cannot be used as it is a reserved word used by the engine"
  db_name  = "completePostgresql"
  username = "complete_postgresql"
  port     = 5432

  # setting manage_master_user_password_rotation to false after it
  # has been set to true previously disables automatic rotation
  manage_master_user_password_rotation    = false
  master_user_password_rotate_immediately = false
  #master_user_password_rotation_schedule_expression = "rate(15 days)"

  multi_az = true

  #  db_subnet_group_name = module.vpc.database_subnet_group
  vpc_security_group_ids = [
    data.aws_security_group.default.id
  ]

  maintenance_window              = "Mon:00:00-Mon:03:00"
  backup_window                   = "03:00-06:00"
  enabled_cloudwatch_logs_exports = ["postgresql", "upgrade"]
  create_cloudwatch_log_group     = true

  backup_retention_period = 14
  skip_final_snapshot     = true
  deletion_protection     = false

  performance_insights_enabled          = true
  performance_insights_retention_period = 7
  create_monitoring_role                = true
  monitoring_interval                   = 60
  monitoring_role_name                  = "${local.analytics_rds_instance_name}-monitoring"
  monitoring_role_use_name_prefix       = true

  parameters = [
    {
      name  = "autovacuum"
      value = 1
    },
    {
      name  = "client_encoding"
      value = "utf8"
    }
  ]

  tags = var.tags
}

output "db_analytics_master_user_secret_arn" {
  value = module.rds_postgres_analytics.db_instance_master_user_secret_arn
}
