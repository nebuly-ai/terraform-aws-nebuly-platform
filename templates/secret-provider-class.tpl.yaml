apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: ${secret_provider_class_name}
  namespace: nebuly
spec:
  provider: aws
  secretObjects:
    - data:
        - key: ${k8s_secret_key_auth_db_password}
          objectName: auth-db-password
        - key: ${k8s_secret_key_auth_db_username}
          objectName: auth-db-username
        - key: ${k8s_secret_key_analytics_db_password}
          objectName: analytics-db-password
        - key: ${k8s_secret_key_analytics_db_username}
          objectName: analytics-db-username
        - key: ${k8s_secret_key_openai_api_key}
          objectName: openai-api-key
        - key: ${k8s_secret_key_jwt_signing_key}
          objectName: jwt-signing-key
        - key: ${k8s_secret_key_nebuly_client_id}
          objectName: nebuly-client-id
        - key: ${k8s_secret_key_nebuly_client_secret}
          objectName: nebuly-client-secret
        %{ if okta_sso_enabled }
        - key: ${k8s_secret_key_okta_sso_client_id}
          objectName: okta-sso-client-id
        - key: ${k8s_secret_key_okta_sso_client_secret}
          objectName: okta-sso-client-secret
        %{ endif }
      secretName: ${secret_provider_class_secret_name}
      type: Opaque
  parameters:
    objects: |
      - objectName: ${secret_name_auth_db_credentials}
        objectType: "secretsmanager"
        jmesPath:
          - path: "username"
            objectAlias: auth-db-username
          - path: "password"
            objectAlias: "auth-db-password"
      - objectName: ${secret_name_analytics_db_credentials}
        objectType: "secretsmanager"
        jmesPath:
          - path: "username"
            objectAlias: "analytics-db-username"
          - path: "password"
            objectAlias: "analytics-db-password"
      - objectName: ${secret_name_nebuly_credentials}
        objectType: "secretsmanager"
        jmesPath:
          - path: "client_id"
            objectAlias: "nebuly-client-id"
          - path: "client_secret"
            objectAlias: "nebuly-client-secret"
      - objectName: ${secret_name_openai_api_key}
        objectType: "secretsmanager"
        objectAlias: "openai-api-key"
      - objectName: ${secret_name_jwt_signing_key}
        objectType: "secretsmanager"
        objectAlias: "jwt-signing-key"
      %{ if okta_sso_enabled }
      - objectName: ${secret_name_okta_sso_credentials}
        objectType: "secretsmanager"
        jmesPath:
          - path: "client_id"
            objectAlias: "okta-sso-client-id"
          - path: "client_secret"
            objectAlias: "okta-sso-client-secret"
      %{ endif }
